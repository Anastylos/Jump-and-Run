name: Build and Test Godot Game

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install GDScript Toolkit (gdtoolkit) globally
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip
        sudo pip3 install --upgrade pip
        sudo pip3 install "gdtoolkit==4.*"

    - name: Run gdmetrics and save results
      run: |
        mkdir -p Metriks
        # gdmetrics ist jetzt in /usr/local/bin und im PATH verf√ºgbar
        gdmetrics "Godot Game/scripts" > Metriks/cyclomatic_complexity.txt

    - name: Commit and push metrics
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add Metriks/cyclomatic_complexity.txt
        git commit -m "Update cyclomatic complexity metrics [skip ci]" || echo "No changes to commit"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Download Godot 4.4.1 Headless
      run: |
        wget https://github.com/godotengine/godot-builds/releases/download/4.4.1-stable/Godot_v4.4.1-stable_linux.x86_64.zip -O godot.zip
        unzip godot.zip
        chmod +x Godot_v4.4.1-stable_linux.x86_64
        sudo mv Godot_v4.4.1-stable_linux.x86_64 /usr/local/bin/godot

    - name: Run Godot (editor check)
      run: |
        godot --headless --path "Godot Game" --editor --quit

    - name: Run GUT Unit Tests
      run: |
        godot --headless --path "Godot Game" \
          -s addons/gut/gut_cmdln.gd \
          -d \
          -gdir=res://tests/unit \
          -gexit

    - name: Download export templates (Standard)
      run: |
        mkdir -p ~/.local/share/godot/export_templates/4.4.1.stable
        curl -L -o templates.tpz https://github.com/godotengine/godot-builds/releases/download/4.4.1-stable/Godot_v4.4.1-stable_export_templates.tpz
        unzip -q templates.tpz -d ~/.local/share/godot/export_templates/4.4.1.stable
        mv ~/.local/share/godot/export_templates/4.4.1.stable/templates/* ~/.local/share/godot/export_templates/4.4.1.stable/
        rmdir ~/.local/share/godot/export_templates/4.4.1.stable/templates

    - name: Ensure Windows export output directory exists
      run: |
        mkdir -p "Build Exports/windows"

    - name: Check Windows export prerequisites
      run: |
        echo "üîç Pr√ºfe Windows-Export-Voraussetzungen..."
        
        # Template-Pfade
        TEMPLATE_DIR="$HOME/.local/share/godot/export_templates/4.4.1.stable"
        DEBUG_TEMPLATE="$TEMPLATE_DIR/windows_debug_x86_64.exe"
        RELEASE_TEMPLATE="$TEMPLATE_DIR/windows_release_x86_64.exe"
        
        # Projektverzeichnis
        PROJECT_DIR="Godot Game"
        EXPORT_PRESETS="$PROJECT_DIR/export_presets.cfg"
        EXPORT_DIR="Build Exports/windows"
        
        MISSING=0
        
        # 1. Pr√ºfe Templates
        if [ ! -f "$DEBUG_TEMPLATE" ] || [ ! -f "$RELEASE_TEMPLATE" ]; then
          echo "‚ùå Export-Templates fehlen:"
          echo "  - $DEBUG_TEMPLATE"
          echo "  - $RELEASE_TEMPLATE"
          MISSING=1
        else
          echo "‚úÖ Export-Templates vorhanden."
        fi
        
        # 2. Pr√ºfe export_presets.cfg
        if [ ! -f "$EXPORT_PRESETS" ]; then
          echo "‚ùå Datei export_presets.cfg fehlt in: $PROJECT_DIR"
          MISSING=1
        else
          echo "‚úÖ export_presets.cfg gefunden."
        fi
        
        # 3. Pr√ºfe Ausgabeverzeichnis
        if [ ! -d "$EXPORT_DIR" ]; then
          echo "‚ö†Ô∏è  Zielverzeichnis $EXPORT_DIR nicht vorhanden. Wird erstellt."
          mkdir -p "$EXPORT_DIR"
          MISSING=1
        else
          echo "‚úÖ Zielverzeichnis f√ºr Windows-Export vorhanden."
        fi
        
        if [ "$MISSING" -eq 1 ]; then
          echo "‚ùå Windows-Export kann wegen fehlender Voraussetzungen nicht gestartet werden."
          exit 1
        else
          echo "‚úÖ Alle Voraussetzungen f√ºr Windows-Export erf√ºllt."
        fi
        
        
    - name: Export Windows EXE
      run: |
        godot --headless --path "Godot Game" --export-release "Windows"

    - name: Upload Windows Build
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Build
        path: Build Exports/windows
